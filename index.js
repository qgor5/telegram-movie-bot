// üìÅ index.js

require("dotenv").config();
const axios = require("axios");
const TelegramBot = require("node-telegram-bot-api");
const cron = require("node-cron");

const TOKEN = process.env.TELEGRAM_TOKEN;
const CHANNEL = process.env.CHANNEL_USERNAME;
const TMDB_KEY = process.env.TMDB_API_KEY;
const LANGUAGE = process.env.LANGUAGE || "ru";
const PUBLISH_COUNT = parseInt(process.env.PUBLISH_COUNT) || 2;
const PUBLISH_HOURS = (process.env.PUBLISH_HOURS || "12,20")
  .split(",")
  .map((h) => parseInt(h));

const bot = new TelegramBot(TOKEN);

function generateSeoDescription(movie) {
  return `üé¨ ${movie.title || movie.name} ‚Äî ${
    movie.release_date?.slice(0, 4) || "–ù–æ–≤—ã–π"
  } ${movie.media_type === "tv" ? "—Å–µ—Ä–∏–∞–ª" : "—Ñ–∏–ª—å–º"}.
${movie.overview?.slice(0, 300) || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."}

üì∫ –°–º–æ—Ç—Ä–µ—Ç—å —Ç—Ä–µ–π–ª–µ—Ä: https://www.youtube.com/results?search_query=${encodeURIComponent(
    movie.title || movie.name
  )}+—Ç—Ä–µ–π–ª–µ—Ä

üéûÔ∏è –ï—â—ë –Ω–æ–≤–∏–Ω–∫–∏ –∫–∏–Ω–æ: https://www.youtube.com/@KinoBuzz/videos`;
}

async function getTrending() {
  try {
    const url = `https://api.themoviedb.org/3/trending/all/day?language=${LANGUAGE}`;
    const res = await axios.get(url, {
      headers: {
        Authorization: `Bearer ${TMDB_KEY}`,
        accept: "application/json",
      },
    });
    return res.data.results.slice(0, 10);
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–æ–≤:", err.message);
    return [];
  }
}

async function publish() {
  const now = new Date();
  const currentHour = now.getUTCHours();
  const kievOffset = 3;
  const localHour = (currentHour + kievOffset) % 24;

  if (!PUBLISH_HOURS.includes(localHour)) {
    console.log("üïí –°–µ–π—á–∞—Å", localHour, "‚Äî –Ω–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏");
    return;
  }

  console.log("üì¢ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞—á–∞–ª–∞—Å—å...");

  const movies = await getTrending();
  const selected = movies.slice(0, PUBLISH_COUNT);

  for (const movie of selected) {
    const title = movie.title || movie.name;
    const imageUrl = movie.poster_path
      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`
      : null;

    const text = `‚≠êÔ∏è <b>${title}</b>\n\n${generateSeoDescription(movie)}`;

    try {
      await bot.sendPhoto(CHANNEL, imageUrl, {
        caption: text,
        parse_mode: "HTML",
      });
      console.log("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", title);
    } catch (err) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", err.message);
    }
  }

  console.log("‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n");
}

// –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
console.log("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ñ–¥—ë—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...");

cron.schedule("*/10 * * * *", () => {
  const now = new Date();
  const currentHour = now.getUTCHours();
  const localHour = (currentHour + 3) % 24;

  if (PUBLISH_HOURS.includes(localHour)) {
    console.log(`‚è∞ –°–µ–π—á–∞—Å ${localHour}:00 ‚Äî –ø–æ—Ä–∞ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å.`);
    publish();
  } else {
    console.log(`üïí –°–µ–π—á–∞—Å ${localHour}:00 ‚Äî –Ω–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.`);
  }
});

// –ß—Ç–æ–±—ã Railway –Ω–µ –∑–∞—Å—ã–ø–∞–ª
setInterval(() => {
  console.log("‚è≥ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω, –∂–¥—ë—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–∫–Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...");
}, 1000 * 60 * 15); // –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
